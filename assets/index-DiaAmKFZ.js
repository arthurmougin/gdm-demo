(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const n of e.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&l(n)}).observe(document,{childList:!0,subtree:!0});function a(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function l(t){if(t.ep)return;t.ep=!0;const e=a(t);fetch(t.href,e)}})();const p="modulepreload",E=function(r){return"/gdm-demo/"+r},f={},y=function(d,a,l){let t=Promise.resolve();if(a&&a.length>0){document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),n=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));t=Promise.all(a.map(s=>{if(s=E(s),s in f)return;f[s]=!0;const u=s.endsWith(".css"),h=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${h}`))return;const i=document.createElement("link");if(i.rel=u?"stylesheet":p,u||(i.as="script",i.crossOrigin=""),i.href=s,n&&i.setAttribute("nonce",n),document.head.appendChild(i),u)return new Promise((o,c)=>{i.addEventListener("load",o),i.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${s}`)))})}))}return t.then(()=>d()).catch(e=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=e,window.dispatchEvent(n),!n.defaultPrevented)throw e})},g=y(()=>import("./index-Cgoq1aYX.js"),[]);AFRAME.registerComponent("hyperbeam",{async init(){const r=this.el.getObject3D("mesh").geometry,{width:d,height:a}=r.parameters;navigator.userAgent.includes("Firefox")||(r.rotateZ(Math.PI),r.rotateY(Math.PI));const l=new THREE.Texture,t=this.el.sceneEl.renderer,e=new THREE.MeshBasicMaterial({map:l});e.side=THREE.DoubleSide;const n=new THREE.Mesh(r,e);this.el.setObject3D("mesh",n);let s="";if(s===""){const o="gdm-demo",c=await fetch("https://demo-api.tutturu.workers.dev/"+o);if(c.status>=400){alert("We are out of demo servers! Visit hyperbeam.dev to get your own API key");return}const m=await c.json();m.room!==o&&history.replaceState(null,null,"/"+m.room+location.search),s=m.url}const u=(await g).default,h=await u(hbcontainer,s,{frameCb:o=>{l.image?t.copyTextureToTexture(new THREE.Vector2(0,0),new THREE.Texture(o),l):(o.constructor===HTMLVideoElement&&(o.width=o.videoWidth,o.height=o.videoHeight),l.image=o,l.needsUpdate=!0)},audioTrackCb:o=>{audio.srcObject=new MediaStream([o]),this.el.addEventListener("sound-loaded",()=>{this.el.components.sound.playSound()})}}),i=o=>{const c=new THREE.Vector3().copy(o.detail.intersection.point);n.worldToLocal(c),h.sendEvent({type:o.type,x:c.x/d+.5,y:-c.y/a+.5,button:0})};this.el.addEventListener("mousedown",i),this.el.addEventListener("mouseup",i),window.addEventListener("wheel",o=>{this.el.is("cursor-hovered")&&h.sendEvent({type:"wheel",deltaY:o.deltaY})})}});AFRAME.registerComponent("log",{init(){this.el.addEventListener("click",r=>{console.log(r)}),this.el.addEventListener("hideIsland",r=>{console.log(r)}),this.el.addEventListener("showIsland",r=>{console.log(r)}),this.el.addEventListener("showBands",r=>{console.log(r)}),this.el.addEventListener("hideBands",r=>{console.log(r)})}});
