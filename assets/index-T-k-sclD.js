(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const t of o)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function l(o){const t={};return o.integrity&&(t.integrity=o.integrity),o.referrerPolicy&&(t.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?t.credentials="include":o.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(o){if(o.ep)return;o.ep=!0;const t=l(o);fetch(o.href,t)}})();const p="modulepreload",E=function(e){return"/gdm-demo/"+e},f={},g=function(n,l,a){let o=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),i=(t==null?void 0:t.nonce)||(t==null?void 0:t.getAttribute("nonce"));o=Promise.all(l.map(s=>{if(s=E(s),s in f)return;f[s]=!0;const u=s.endsWith(".css"),h=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${h}`))return;const c=document.createElement("link");if(c.rel=u?"stylesheet":p,u||(c.as="script",c.crossOrigin=""),c.href=s,i&&c.setAttribute("nonce",i),document.head.appendChild(c),u)return new Promise((r,d)=>{c.addEventListener("load",r),c.addEventListener("error",()=>d(new Error(`Unable to preload CSS for ${s}`)))})}))}return o.then(()=>n()).catch(t=>{const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=t,window.dispatchEvent(i),!i.defaultPrevented)throw t})},y=g(()=>import("./index-Cgoq1aYX.js"),[]);AFRAME.registerComponent("hyperbeam",{async init(){const e=this.el.getObject3D("mesh").geometry,{width:n,height:l}=e.parameters;navigator.userAgent.includes("Firefox")||(e.rotateZ(Math.PI),e.rotateY(Math.PI));const a=new THREE.Texture,o=this.el.sceneEl.renderer,t=new THREE.MeshBasicMaterial({map:a});t.side=THREE.DoubleSide;const i=new THREE.Mesh(e,t);this.el.setObject3D("mesh",i);let s="";if(s===""){const r="gdm-demo",d=await fetch("https://demo-api.tutturu.workers.dev/"+r);if(d.status>=400){alert("We are out of demo servers! Visit hyperbeam.dev to get your own API key");return}const m=await d.json();m.room!==r&&history.replaceState(null,null,"/"+m.room+location.search),s=m.url}const u=(await y).default,h=await u(hbcontainer,s,{frameCb:r=>{a.image?o.copyTextureToTexture(new THREE.Vector2(0,0),new THREE.Texture(r),a):(r.constructor===HTMLVideoElement&&(r.width=r.videoWidth,r.height=r.videoHeight),a.image=r,a.needsUpdate=!0)},audioTrackCb:r=>{audio.srcObject=new MediaStream([r]),this.el.addEventListener("sound-loaded",()=>{this.el.components.sound.playSound()})}}),c=r=>{const d=new THREE.Vector3().copy(r.detail.intersection.point);i.worldToLocal(d),h.sendEvent({type:r.type,x:d.x/n+.5,y:-d.y/l+.5,button:0})};this.el.addEventListener("mousedown",c),this.el.addEventListener("mouseup",c),window.addEventListener("wheel",r=>{this.el.is("cursor-hovered")&&h.sendEvent({type:"wheel",deltaY:r.deltaY})})}});AFRAME.registerComponent("log",{init(){this.el.addEventListener("click",e=>{console.log(e)}),this.el.addEventListener("hideIsland",e=>{console.log(e)}),this.el.addEventListener("showIsland",e=>{console.log(e)}),this.el.addEventListener("showBands",e=>{console.log(e)}),this.el.addEventListener("hideBands",e=>{console.log(e)})}});AFRAME.registerComponent("regie",{events:{summon:function(e){console.dir(this.el.sceneEl.camera.el);const n=this.el.sceneEl.camera;n&&(n.parent=this.el.object3D,n.position.x=0,n.position.y=0,n.position.z=0,n.rotation.x=0,n.rotation.y=0,n.rotation.z=0)}},init:function(){this.system.registerMe(this.el)},remove:function(){this.system.unregisterMe(this.el)}});AFRAME.registerSystem("regie",{init:function(){this.entities=[],document.addEventListener("keydown",e=>{var n;if(e.code.startsWith("Digit")){const l=Number.parseInt(e.code.replace("Digit",""));(n=this.entities[l-1])==null||n.emit("summon")}})},registerMe:function(e){this.entities.push(e)},unregisterMe:function(e){var n=this.entities.indexOf(e);this.entities.splice(n,1)}});
